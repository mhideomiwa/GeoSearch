'use client';
import React, { useState } from 'react';
import { GoogleMap, Marker, useJsApiLoader } from '@react-google-maps/api';

const containerStyle = {
    width: '100%',
    height: '90vh',
};

const center = {
    lat: 0,
    lng: 0
};

const apiKey = process.env.NEXT_PUBLIC_GOOGLE_MAPS_API_KEY || '';

const GuessMap = () => {
    const { isLoaded } = useJsApiLoader({
        googleMapsApiKey: apiKey
    });

    const [markerPosition, setMarkerPosition] = useState<{ lat: number; lng: number } | null>(null);

    const handleMapClick = (event: google.maps.MapMouseEvent) => {
        if (event.latLng) {
            setMarkerPosition({
                lat: event.latLng.lat(),
                lng: event.latLng.lng()
            }); //Generated by ChatGPT.  I couldn't find documentation for this, but the AI was able to get it working.
            console.log("lat: " + event.latLng.lat(), " lng: " + event.latLng.lng());
        }
    };

    const mapOptions = {
        streetViewControl: false,
        styles: [
            {
                featureType: "poi",
                elementType: "labels",
                stylers: [{ visibility: "off" }]
            },
            {
                featureType: "landscape",
                elementType: "labels",
                stylers: [{ visibility: "off" }]
            }
        ]
    };

    if (!isLoaded) return <p>Loading...</p>;

    return (
        <GoogleMap
            mapContainerStyle={containerStyle}
            center={center}
            zoom={2}
            onClick={handleMapClick}
            options={mapOptions}
        >
            {markerPosition && <Marker position={markerPosition} />}
        </GoogleMap>
    );
};

export default GuessMap;
